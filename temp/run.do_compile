#!/bin/sh
KAKIP_WS=`pwd`
YOCTO_WORK=`pwd`
VAR_UNINATIVE="${YOCTO_WORK}/sysroots-uninative"
EXE_PATH="/usr/bin"
# Emit a useful diagnostic if something fails:
bb_exit_handler() {
    ret=$?
    case $ret in
    0)  ;;
    *)  case $BASH_VERSION in
        "") echo "WARNING: exit code $ret from a shell command.";;
        *)  echo "WARNING: ${BASH_SOURCE[0]}:${BASH_LINENO[0]} exit $ret from '$BASH_COMMAND'";;
        esac
        exit $ret
    esac
}
trap 'bb_exit_handler' 0
set -e
export AR="aarch64-poky-linux-gcc-ar"
export ARCH="arm64"
export AS="aarch64-poky-linux-as "
export BUILD_AR="ar"
export BUILD_AS="as "
export BUILD_CC="gcc "
export BUILD_CCLD="gcc "
export BUILD_CFLAGS="-isystem${KAKIP_WS}/recipe-sysroot-native/usr/include -O2 -pipe"
export BUILD_CPP="gcc  -E"
export BUILD_CPPFLAGS="-isystem${KAKIP_WS}/recipe-sysroot-native/usr/include"
export BUILD_CXX="g++ "
export BUILD_CXXFLAGS="-isystem${KAKIP_WS}/recipe-sysroot-native/usr/include -O2 -pipe"
export BUILD_FC="gfortran "
export BUILD_LD="ld "
export BUILD_LDFLAGS="-L${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -L${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,--enable-new-dtags                         -Wl,-rpath-link,${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -Wl,-rpath-link,${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,-rpath,${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -Wl,-rpath,${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,-O1 -Wl,--allow-shlib-undefined -Wl,--dynamic-linker=${VAR_UNINATIVE}/x86_64-linux/lib/ld-linux-x86-64.so.2"
export BUILD_NM="nm"
export BUILD_RANLIB="ranlib"
export BUILD_STRIP="strip"
export CC="aarch64-poky-linux-gcc  -mtune=cortex-a55 -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=${KAKIP_WS}/recipe-sysroot"
export CCLD="aarch64-poky-linux-gcc  -mtune=cortex-a55 -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=${KAKIP_WS}/recipe-sysroot"
export CFLAGS=" -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=${KAKIP_WS}=/usr/src/debug/linux-renesas/5.10.145-cip17+gitAUTOINC+e61e051bbc-r1                      -fdebug-prefix-map=${KAKIP_WS}=/usr/src/debug/linux-renesas/5.10.145-cip17+gitAUTOINC+e61e051bbc-r1                      -fdebug-prefix-map=${KAKIP_WS}/recipe-sysroot=                      -fdebug-prefix-map=${KAKIP_WS}/recipe-sysroot-native= "
export CMDLINE_CONSOLE="console=ttyS0"
export CPP="aarch64-poky-linux-gcc -E --sysroot=${KAKIP_WS}/recipe-sysroot  -mtune=cortex-a55 -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security"
export CPPFLAGS=""
export CROSS_COMPILE="aarch64-poky-linux-"
export CXX="aarch64-poky-linux-g++  -mtune=cortex-a55 -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=${KAKIP_WS}/recipe-sysroot"
export CXXFLAGS=" -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=${KAKIP_WS}=/usr/src/debug/linux-renesas/5.10.145-cip17+gitAUTOINC+e61e051bbc-r1                      -fdebug-prefix-map=${KAKIP_WS}=/usr/src/debug/linux-renesas/5.10.145-cip17+gitAUTOINC+e61e051bbc-r1                      -fdebug-prefix-map=${KAKIP_WS}/recipe-sysroot=                      -fdebug-prefix-map=${KAKIP_WS}/recipe-sysroot-native=  -fvisibility-inlines-hidden"
unset DISTRO
export FC="aarch64-poky-linux-gfortran  -mtune=cortex-a55 -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=${KAKIP_WS}/recipe-sysroot"
export GIT_CEILING_DIRECTORIES="${KAKIP_WS}"
export HOME="/home/ubuntu"
export KBUILD_BUILD_HOST="oe-host"
export KBUILD_BUILD_USER="oe-user"
export KBUILD_BUILD_VERSION="1"
export LC_ALL="en_US.UTF-8"
export LD="aarch64-poky-linux-ld --sysroot=${KAKIP_WS}/recipe-sysroot "
export LDFLAGS="-Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed -fstack-protector-strong -Wl,-z,relro,-z,now"
export LOGNAME="ubuntu"
unset MACHINE
export MAKE="make"
export NM="aarch64-poky-linux-nm"
export OBJCOPY="aarch64-poky-linux-objcopy"
export OBJDUMP="aarch64-poky-linux-objdump"
export OS="linux"
export PATH="${EXE_PATH}:${VAR_UNINATIVE}/x86_64-linux/usr/bin:${YOCTO_WORK}/poky/scripts:${KAKIP_WS}/recipe-sysroot-native/usr/bin/aarch64-poky-linux:${KAKIP_WS}/recipe-sysroot/usr/bin/crossscripts:${KAKIP_WS}/recipe-sysroot-native/usr/sbin:${KAKIP_WS}/recipe-sysroot-native/usr/bin:${KAKIP_WS}/recipe-sysroot-native/sbin:${KAKIP_WS}/recipe-sysroot-native/bin:${YOCTO_WORK}/poky/bitbake/bin:${YOCTO_WORK}/build/tmp/hosttools"
export PERL_HASH_SEED="0"
export PKG_CONFIG_DIR="${KAKIP_WS}/recipe-sysroot/usr/lib64/pkgconfig"
export PKG_CONFIG_DISABLE_UNINSTALLED="yes"
export PKG_CONFIG_LIBDIR="${KAKIP_WS}/recipe-sysroot/usr/lib64/pkgconfig"
export PKG_CONFIG_PATH="${KAKIP_WS}/recipe-sysroot/usr/lib64/pkgconfig:${KAKIP_WS}/recipe-sysroot/usr/share/pkgconfig:${KAKIP_WS}/recipe-sysroot//usr/share/pkgconfig"
export PKG_CONFIG_SYSROOT_DIR="${KAKIP_WS}/recipe-sysroot"
export PKG_CONFIG_SYSTEM_INCLUDE_PATH="/usr/include"
export PKG_CONFIG_SYSTEM_LIBRARY_PATH="/lib64:/usr/lib64"
export PSEUDO_DISABLED="1"
export PSEUDO_UNLOAD="1"
export PYTHONHASHSEED="0"
export RANLIB="aarch64-poky-linux-gcc-ranlib"
export READELF="aarch64-poky-linux-readelf"
unset SHELL
export SOURCE_DATE_EPOCH="1614392478"
export SOURCE_DATE_EPOCH_FALLBACK="1302044400"
export STRINGS="aarch64-poky-linux-strings"
export STRIP="aarch64-poky-linux-strip"
unset TARGET_ARCH
export TERM="xterm"
export TZ="UTC"
export UBOOT_ARCH="arm64"
export USER="ubuntu"
export base_bindir="/bin"
export base_libdir="/lib64"
export base_prefix=""
export base_sbindir="/sbin"
export bindir="/usr/bin"
export datadir="/usr/share"
export docdir="/usr/share/doc"
export exec_prefix="/usr"
export includedir="/usr/include"
export infodir="/usr/share/info"
export libdir="/usr/lib64"
export libexecdir="/usr/libexec"
export localstatedir="/var"
export mandir="/usr/share/man"
export nonarch_base_libdir="/lib"
export nonarch_libdir="/usr/lib"
export oldincludedir="/usr/include"
export prefix="/usr"
export sbindir="/usr/sbin"
export servicedir="/srv"
export sharedstatedir="/com"
export sysconfdir="/etc"
export systemd_system_unitdir="/lib/systemd/system"
export systemd_unitdir="/lib/systemd"
export systemd_user_unitdir="/usr/lib/systemd/user"

do_compile() {
    kernel_do_compile
	if [ -n "" ]; then
		export DTC_FLAGS=""
	fi

	for dtbf in renesas/kakip-es1.dtb; do
		dtb=`normalize_dtb "$dtbf"`
		oe_runmake $dtb CC="aarch64-poky-linux-gcc   -fuse-ld=bfd -fmacro-prefix-map=${KAKIP_WS}=/usr/src/debug/linux-renesas/5.10.145-cip17+gitAUTOINC+e61e051bbc-r1                      -fdebug-prefix-map=${KAKIP_WS}=/usr/src/debug/linux-renesas/5.10.145-cip17+gitAUTOINC+e61e051bbc-r1                      -fdebug-prefix-map=${KAKIP_WS}/recipe-sysroot=                      -fdebug-prefix-map=${KAKIP_WS}/recipe-sysroot-native=  -fdebug-prefix-map=${YOCTO_WORK}/build/tmp/work-shared/kakip-es1/kernel-source=/usr/src/kernel -fdebug-prefix-map=${YOCTO_WORK}/build/tmp/work-shared/kakip-es1/kernel-build-artifacts=/usr/src/kernel  --sysroot=${KAKIP_WS}/recipe-sysroot $cc_extra " LD="aarch64-poky-linux-ld.bfd    --sysroot=${KAKIP_WS}/recipe-sysroot" 
	done
}

kernel_do_compile() {
	unset CFLAGS CPPFLAGS CXXFLAGS LDFLAGS MACHINE
	if [ "1" = "1" ]; then
		# kernel sources do not use do_unpack, so SOURCE_DATE_EPOCH may not
		# be set....
		if [ "1614392478" = "" -o "1614392478" = "0" ]; then
			# The source directory is not necessarily a git repository, so we
			# specify the git-dir to ensure that git does not query a
			# repository in any parent directory.
			SOURCE_DATE_EPOCH=`git --git-dir="${YOCTO_WORK}/build/tmp/work-shared/kakip-es1/kernel-source/.git" log -1 --pretty=%ct 2>/dev/null || echo "1520598896"`
		fi

		ts=`LC_ALL=C date -d @$SOURCE_DATE_EPOCH`
		export KBUILD_BUILD_TIMESTAMP="$ts"
		export KCONFIG_NOTIMESTAMP=1
		bbnote "KBUILD_BUILD_TIMESTAMP: $ts"
	else
		ts=`LC_ALL=C date`
		export KBUILD_BUILD_TIMESTAMP="$ts"
		bbnote "KBUILD_BUILD_TIMESTAMP: $ts"
	fi
	# The $use_alternate_initrd is only set from
	# do_bundle_initramfs() This variable is specifically for the
	# case where we are making a second pass at the kernel
	# compilation and we want to force the kernel build to use a
	# different initramfs image.  The way to do that in the kernel
	# is to specify:
	# make ...args... CONFIG_INITRAMFS_SOURCE=some_other_initramfs.cpio
	if [ "$use_alternate_initrd" = "" ] && [ "" != "" ] ; then
		# The old style way of copying an prebuilt image and building it
		# is turned on via INTIRAMFS_TASK != ""
		copy_initramfs
		use_alternate_initrd=CONFIG_INITRAMFS_SOURCE=${KAKIP_WS}/linux-kakip_es1-standard-build/usr/.cpio
	fi
	cc_extra=$(get_cc_option)
	for typeformake in Image ; do
		oe_runmake ${typeformake} CC="aarch64-poky-linux-gcc   -fuse-ld=bfd -fmacro-prefix-map=${KAKIP_WS}=/usr/src/debug/linux-renesas/5.10.145-cip17+gitAUTOINC+e61e051bbc-r1                      -fdebug-prefix-map=${KAKIP_WS}=/usr/src/debug/linux-renesas/5.10.145-cip17+gitAUTOINC+e61e051bbc-r1                      -fdebug-prefix-map=${KAKIP_WS}/recipe-sysroot=                      -fdebug-prefix-map=${KAKIP_WS}/recipe-sysroot-native=  -fdebug-prefix-map=${YOCTO_WORK}/build/tmp/work-shared/kakip-es1/kernel-source=/usr/src/kernel -fdebug-prefix-map=${YOCTO_WORK}/build/tmp/work-shared/kakip-es1/kernel-build-artifacts=/usr/src/kernel  --sysroot=${KAKIP_WS}/recipe-sysroot $cc_extra " LD="aarch64-poky-linux-ld.bfd    --sysroot=${KAKIP_WS}/recipe-sysroot"  $use_alternate_initrd
	done
}

normalize_dtb() {
	dtb="$1"
	if echo $dtb | grep -q '/dts/'; then
		bbwarn "$dtb contains the full path to the the dts file, but only the dtb name should be used."
		dtb=`basename $dtb | sed 's,\.dts$,.dtb,g'`
	fi
	echo "$dtb"
}

oe_runmake() {
	oe_runmake_call "$@" || die "oe_runmake failed"
}

copy_initramfs() {
	echo "Copying initramfs into ./usr ..."
	# In case the directory is not created yet from the first pass compile:
	mkdir -p ${KAKIP_WS}/linux-kakip_es1-standard-build/usr
	# Find and use the first initramfs image archive type we find
	rm -f ${KAKIP_WS}/linux-kakip_es1-standard-build/usr/.cpio
	for img in cpio cpio.gz cpio.lz4 cpio.lzo cpio.lzma cpio.xz; do
		if [ -e "${YOCTO_WORK}/build/tmp/deploy/images/kakip-es1/.$img" ]; then
			cp ${YOCTO_WORK}/build/tmp/deploy/images/kakip-es1/.$img ${KAKIP_WS}/linux-kakip_es1-standard-build/usr/.
			case $img in
			*gz)
				echo "gzip decompressing image"
				gunzip -f ${KAKIP_WS}/linux-kakip_es1-standard-build/usr/.$img
				break
				;;
			*lz4)
				echo "lz4 decompressing image"
				lz4 -df ${KAKIP_WS}/linux-kakip_es1-standard-build/usr/.$img ${KAKIP_WS}/linux-kakip_es1-standard-build/usr/.cpio
				break
				;;
			*lzo)
				echo "lzo decompressing image"
				lzop -df ${KAKIP_WS}/linux-kakip_es1-standard-build/usr/.$img
				break
				;;
			*lzma)
				echo "lzma decompressing image"
				lzma -df ${KAKIP_WS}/linux-kakip_es1-standard-build/usr/.$img
				break
				;;
			*xz)
				echo "xz decompressing image"
				xz -df ${KAKIP_WS}/linux-kakip_es1-standard-build/usr/.$img
				break
				;;
			esac
			break
		fi
	done
	# Verify that the above loop found a initramfs, fail otherwise
	[ -f ${KAKIP_WS}/linux-kakip_es1-standard-build/usr/.cpio ] && echo "Finished copy of initramfs into ./usr" || die "Could not find any ${YOCTO_WORK}/build/tmp/deploy/images/kakip-es1/.cpio{.gz|.lz4|.lzo|.lzma|.xz) for bundling; INITRAMFS_IMAGE_NAME might be wrong."
}

bbnote() {
	if [ -p ${KAKIP_WS}/temp/fifo.302340 ] ; then
		printf "%b\0" "bbnote $*" > ${KAKIP_WS}/temp/fifo.302340
	else
		echo "NOTE: $*"
	fi
}

get_cc_option() {
		# Check if KERNEL_CC supports the option "file-prefix-map".
		# This option allows us to build images with __FILE__ values that do not
		# contain the host build path.
		if aarch64-poky-linux-gcc   -fuse-ld=bfd -fmacro-prefix-map=${KAKIP_WS}=/usr/src/debug/linux-renesas/5.10.145-cip17+gitAUTOINC+e61e051bbc-r1                      -fdebug-prefix-map=${KAKIP_WS}=/usr/src/debug/linux-renesas/5.10.145-cip17+gitAUTOINC+e61e051bbc-r1                      -fdebug-prefix-map=${KAKIP_WS}/recipe-sysroot=                      -fdebug-prefix-map=${KAKIP_WS}/recipe-sysroot-native=  -fdebug-prefix-map=${YOCTO_WORK}/build/tmp/work-shared/kakip-es1/kernel-source=/usr/src/kernel -fdebug-prefix-map=${YOCTO_WORK}/build/tmp/work-shared/kakip-es1/kernel-build-artifacts=/usr/src/kernel  --sysroot=${KAKIP_WS}/recipe-sysroot -Q --help=joined | grep -q "\-ffile-prefix-map=<old=new>"; then
			echo "-ffile-prefix-map=${YOCTO_WORK}/build/tmp/work-shared/kakip-es1/kernel-source=/kernel-source/"
		fi
}

oe_runmake_call() {
	bbnote make -j 20  HOSTCC="gcc  -isystem${KAKIP_WS}/recipe-sysroot-native/usr/include -O2 -pipe -L${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -L${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,--enable-new-dtags                         -Wl,-rpath-link,${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -Wl,-rpath-link,${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,-rpath,${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -Wl,-rpath,${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,-O1 -Wl,--allow-shlib-undefined -Wl,--dynamic-linker=${VAR_UNINATIVE}/x86_64-linux/lib/ld-linux-x86-64.so.2" HOSTCPP="gcc  -E"  HOSTCXX="g++  -isystem${KAKIP_WS}/recipe-sysroot-native/usr/include -O2 -pipe -L${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -L${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,--enable-new-dtags                         -Wl,-rpath-link,${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -Wl,-rpath-link,${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,-rpath,${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -Wl,-rpath,${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,-O1 -Wl,--allow-shlib-undefined -Wl,--dynamic-linker=${VAR_UNINATIVE}/x86_64-linux/lib/ld-linux-x86-64.so.2" "$@"
	make -j 20  HOSTCC="gcc  -isystem${KAKIP_WS}/recipe-sysroot-native/usr/include -O2 -pipe -L${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -L${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,--enable-new-dtags                         -Wl,-rpath-link,${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -Wl,-rpath-link,${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,-rpath,${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -Wl,-rpath,${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,-O1 -Wl,--allow-shlib-undefined -Wl,--dynamic-linker=${VAR_UNINATIVE}/x86_64-linux/lib/ld-linux-x86-64.so.2" HOSTCPP="gcc  -E"  HOSTCXX="g++  -isystem${KAKIP_WS}/recipe-sysroot-native/usr/include -O2 -pipe -L${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -L${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,--enable-new-dtags                         -Wl,-rpath-link,${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -Wl,-rpath-link,${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,-rpath,${KAKIP_WS}/recipe-sysroot-native/usr/lib                         -Wl,-rpath,${KAKIP_WS}/recipe-sysroot-native/lib                         -Wl,-O1 -Wl,--allow-shlib-undefined -Wl,--dynamic-linker=${VAR_UNINATIVE}/x86_64-linux/lib/ld-linux-x86-64.so.2" "$@"
}

bbwarn() {
	if [ -p ${KAKIP_WS}/temp/fifo.302340 ] ; then
		printf "%b\0" "bbwarn $*" > ${KAKIP_WS}/temp/fifo.302340
	else
		echo "WARNING: $*"
	fi
}

die() {
	bbfatal_log "$*"
}

bbfatal_log() {
	if [ -p ${KAKIP_WS}/temp/fifo.302340 ] ; then
		printf "%b\0" "bbfatal_log $*" > ${KAKIP_WS}/temp/fifo.302340
	else
		echo "ERROR: $*"
	fi
	exit 1
}

cd "${KAKIP_WS}/linux-kakip_es1-standard-build"
do_compile

# cleanup
ret=$?
trap '' 0
exit $ret
